(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{328:function(e,t,r){"use strict";r.r(t);var a=r(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[r("router-link",{attrs:{to:"/api-derive/"}},[e._v("Polkadot JS API")]),e._v(" › "),r("router-link",{attrs:{to:"/api-derive/globals.html"}},[e._v("Globals")]),e._v(" › "),r("router-link",{attrs:{to:"/api-derive/modules/_staking_overview_.html"}},[e._v('"staking/overview"')])],1),e._v(" "),r("h1",{attrs:{id:"external-module-staking-overview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#external-module-staking-overview"}},[e._v("#")]),e._v(' External module: "staking/overview"')]),e._v(" "),r("h2",{attrs:{id:"index"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[e._v("#")]),e._v(" Index")]),e._v(" "),r("h3",{attrs:{id:"variables"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[e._v("#")]),e._v(" Variables")]),e._v(" "),r("ul",[r("li",[r("router-link",{attrs:{to:"/api-derive/modules/_staking_overview_.html#const-overview"}},[e._v("overview")])],1)]),e._v(" "),r("h2",{attrs:{id:"variables-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#variables-2"}},[e._v("#")]),e._v(" Variables")]),e._v(" "),r("h3",{attrs:{id:"const-overview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#const-overview"}},[e._v("#")]),e._v(" "),r("code",[e._v("Const")]),e._v(" overview")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("overview")]),e._v(": "),r("em",[e._v("(Anonymous function)")]),e._v(" =  memo((api: ApiInterfaceRx): () => Observable"),r("DerivedStakingOverview",[e._v(" => {\nconst sessionIndexesCall = sessionIndexes(api);")])],1),e._v(" "),r("p",[e._v("return memo((): Observable"),r("DerivedStakingOverview",[e._v(" =>\ncombineLatest([\nsessionIndexesCall(),\napi.queryMulti<[Vec"),r("AccountId",[e._v(", Vec"),r("AccountId",[e._v("]>([\napi.query.session.validators,\napi.query.staking.currentElected\n])\n]).pipe(\nswitchMap(([{ currentEra, currentIndex, validatorCount }, [validators, currentElected]]) =>\ncombineLatest([\nof({ currentElected, currentEra, currentIndex, validators, validatorCount }),\n// this will change on a per block basis, keep it innermost (and it needs eraIndex)\napi.query.staking.currentEraPointsEarned"),r("EraPoints",[e._v("(currentEra)\n])\n),\nmap(([{ currentElected, currentEra, currentIndex, validators, validatorCount }, eraPoints]): DerivedStakingOverview => ({\ncurrentElected, currentEra, currentIndex, eraPoints, validators, validatorCount\n})),\ndrr()\n)\n);\n}, true)")])],1)],1)],1)],1),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/polkadot-js/api/blob/7cc961f789/packages/api-derive/src/staking/overview.ts#L19",target:"_blank",rel:"noopener noreferrer"}},[e._v("staking/overview.ts:19"),r("OutboundLink")],1)])]),e._v(" "),r("p",[r("strong",[r("code",[e._v("description")])]),e._v(" Retrieve the staking overview, including elected and points earned")])])}),[],!1,null,null,null);t.default=n.exports}}]);